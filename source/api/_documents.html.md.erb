# Documents
## Get Documents

**Summary:** Get all Documents for Project Template

```ruby
require "uri"
require "json"
require "net/http"

url = URI("{api_endpoint}/api/v3/documents")
payload = {} # See payload tab

http = Net::HTTP.new(url.host, url.port)
request = Net::HTTP::Get.new(url)
request["Authorization"] = "Bearer {token}"
request["Content-Type"] = "application/json"
request.body = JSON.dump(payload)

response = http.request(request)
puts response.read_body
```

```json-doc
{
  "projectTemplateId": 37081,
  "requisitionIdentifier": null,
  "requisitionId": 73854,
  "folderName": "raw data",
  "startDate": "2021-01-01",
  "endDate": "2023-01-01",
  "page": 1,
  "perPage": 10
}
```

```json
{
    "documents": [
        {
            "id": 1,
            "name": "test1.pdf",
            "requisitionId": 10,
            "requisitionIdentifier": "REQ-1",
            "downloadLink": "https://...",
            "createdAt": "2021-01-25T22:06:21.000Z",
            "uploadLink": null
        },
        {
            "id": 2,
            "name": "test2.pdf",
            "requisitionId": 11,
            "requisitionIdentifier": "REQ-2",
            "downloadLink": "https://...",
            "createdAt": "2021-01-25T22:06:21.000Z",
            "uploadLink": null
        }
    ],
    "meta": {
        "currentPage": 1,
        "perPage": 5000,
        "totalEntries": 11
    }
}
```

### HTTP Request
`GET /v3/documents`

**Parameters**

| Name | Located in | Description | Required | Type |
| ---- | ---------- | ----------- | -------- | ---- |
| projectTemplateId | query | Filters documents by project template. | Yes | integer |
| requisitionIdentifier | query | Filters documents for specific Requisition Identifier | No | string |
| requisitionId | query | Filters documents for specific Requisition ID | No | integer |
| folderName | query | Filters documents by folder name. | No | string |
| startDate | query | Filters documents created_at starting from this date. | Yes | string |
| endDate | query | Filters documents created_at ending from this date. | Yes | string |
| page | query | Page number being requested. | No | integer |
| perPage | query | Number of documents to return per page. Maximum of 5000. | No | integer |

**Responses**

| Code | Description |
| ---- | ----------- |
| 200 | All documents for a Project Template |

## Post Document

**Summary:** Creates a Document for Project Template

```ruby
require "uri"
require "json"
require "net/http"

url = URI("{api_endpoint}/api/v3/documents")
payload = {} # See payload tab

http = Net::HTTP.new(url.host, url.port)
request = Net::HTTP::Post.new(url)
request["Authorization"] = "Bearer {token}"
request["Content-Type"] = "application/json"
request.body = JSON.dump(payload)

response = http.request(request)
puts response.read_body
```

```json-doc
{
  "document": {
    "requisitionId": 73854,
    "requisitionIdentifier": null,
    "projectTemplateId": 37081,
    "folderName": "raw data",
    "fileName": "test.txt",
    "fileContent": "file-content",
    "returnUploadLink": true
  }
}
```

```json
{
    "document": {
        "id": 187167,
        "name": "REQ-749 - test.txt",
        "requisitionId": 73854,
        "requisitionIdentifier": "REQ-749",
        "downloadLink": "https://localhost:3002/resources/466834/download_as_attachment",
        "createdAt": "2022-02-24T18:51:28.000Z",
        "uploadLink": "http://localhost:4572/users.dev.ovation.io/529e74dc-1c64-4fd5-88e9-ae4f9286e3b3/27897668-f3ff-4169-9e82-27550421b3f4/6c5a6cb1-5109-4169-95c1-deb5a71253ee/test.txt?x-amz-server-side-encryption=AES256&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAYU246YJYQXAGKE6K%2F20220224%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220224T185128Z&X-Amz-Expires=900&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDoaCXVzLWVhc3QtMSJGMEQCIFeRxNkhP0dCcCbiHXIpflROjwBRJcMhGw48A4W%2FCuhGAiA3oNNMnFU72SS8oB2rCtCRanHivs1%2Fp1uBUBVzz67MBSqRAwiS%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAEaDDU5NDUxMTA1MzQyNSIMv2i%2FHYlljTRAPv95KuUCSTnAY84IRSCjl%2Fi%2FSXcOFKO8PsqVm0vRl%2BIKm3mLuFhsqAta1sjk%2FIshFZe6Ynhm03yt5Wq06Z%2FSUzj5rbLqBUYhuH37eSg%2Bxkz%2FlZzWovF48uaiAatVxiY%2FhAAbhs8xXqkqk56hhWuz1Fj3GSSel2NqhoJXl%2Fpq1veSim1xi%2Fh2nWE56kPKHUW2Txxon9P6TEVx5ZWQgEPDB%2FSJeqDPdkHOWJbdF3WNN7KcYUG%2FE1iMSM7T18V3O3K%2ByFdinvU7sb7ns4jcQJJKWitYGXwIwFXwKPjYrtnAtVuifdAJJnoKUjQvMwLGNf154t8CIZBEEN2C13uwxbdxZ4%2BELQaO1ANdwcCvBoCFqji5W4s1G9Vi6wwiBQarqldXA9P65aytkR2o8ZRIbskKzDeset8hIvOkbad0tDiKfz7mh%2B4W5PBpXoaaBZUqwvQgu0MFactFuL7oVQs1y98hCZeaD0h3MMjpT0ImMPD53pAGOqcBRjCykKvQ3Tv0%2BXZEOUI7Vpv5heOqoJHBFGGTAdFYG2RYH0rjZg0TtfJUqh8VNuDKmB39hB8zeO%2Fzo%2FYHvqdt%2FNn%2Bjcj%2BZK%2FFRXM6kbVP41j3oZnHi9s8NmYYvN4aXDEIK7bKOAys7AuM%2F%2BsKHNuhRgkiN7n42jm0fOkIZyYFhgerEtHAx4exXOUhoDqZJKsVwplnE8mqEaJUSXIsZpbTgR6lLJ8ZQu4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a3e3ec31d7819954cfae26d85b1c6a7bea05e40067e3e5cb22e551348395d92e"
    }
}
```

### HTTP Request
`POST /v3/documents`

**Parameters**

| Name | Located in | Description | Required | Type |
| ---- | ---------- | ----------- | -------- | ---- |
| requisitionId | document | Used instead of requisitionIdentifier and projectTemplateId. | Yes | integer |
| requisitionIdentifier | document | Must supply projectTemplateId when using this field)  | Yes | string |
| projectTemplateId | document | Project template associated with requisition identifier | Yes | integer |
| folderName | document | Folder document will be added to. | Yes | string |
| fileName | document | Name of document to be added.  | Yes | string |
| fileContent | document | Base64-encoded data of initial revision.  | Yes | string |
| returnUploadLink | document | Whether to return a presigned URL to upload file to S3 (only used if not sending fileContent). | Yes | boolean |

**Responses**

| Code | Description |
| ---- | ----------- |
| 200 | Created Document |
